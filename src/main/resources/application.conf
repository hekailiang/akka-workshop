akka {
  event-handlers = [akka.event.slf4j.Slf4jEventHandler]
  loglevel = debug
  actor.debug.lifecycle = off
  extensions = [akkapatterns.TrackingMailboxExtension]

  actor {
     custom-dispatcher {
        mailbox-type = akkapatterns.TrackingMailboxType
     }

     limited-dispatcher {
       mailbox-capacity = 20
       mailbox-push-timeout-time = 10s
     }

     throttler-dispatcher {
       mailbox-type = akka.dispatch.UnboundedDequeBasedMailbox
     }
  }


  system-utils {
     default-dispatcher {
        # Dispatcher is the name of the event-based dispatcher
        type = Dispatcher

        # What kind of ExecutionService to use
        executor = "fork-join-executor"

        # Configuration for the fork join pool
        fork-join-executor {
            # Min number of threads to cap factor-based parallelism number to
            parallelism-min = 1
            # Parallelism (threads) ... ceil(available processors * factor)
            parallelism-factor = 2.0
            # Max number of threads to cap factor-based parallelism number to
            parallelism-max = 10
        }

        # Throughput defines the maximum number of messages to be
        # processed per actor before the thread jumps to the next actor.
        # Set to 1 for as fair as possible.
        throughput = 100
     }
  }
}


master {
  akka.actor.provider = akka.remote.RemoteActorRefProvider
  akka.remote.netty.hostname = "127.0.0.1"
  akka.remote.netty.port = 2553
  akka.actor.deployment {
    /remote-worker {
      router = round-robin
      nr-of-instances = 10
      target.nodes = ["akka://remote1@127.0.0.1:2554","akka://remote2@127.0.0.1:2555"]
    }
  }
}

remote1 {
  akka.actor.provider = akka.remote.RemoteActorRefProvider
  akka.remote.netty.hostname = "127.0.0.1"
  akka.remote.netty.port = 2554

}

remote2 {
  akka.actor.provider = akka.remote.RemoteActorRefProvider
  akka.remote.netty.hostname = "127.0.0.1"
  akka.remote.netty.port = 2555
}


ClusterSystem {
  akka {
    actor {
      provider = "akka.cluster.ClusterActorRefProvider"
    }
    remote {
      transport = "akka.remote.netty.NettyRemoteTransport"
      log-remote-lifecycle-events = off
      netty {
        hostname = "127.0.0.1"
        port = 0
      }
    }
    cluster {
      seed-nodes = [
        "akka://ClusterSystem@127.0.0.1:2551",
        "akka://ClusterSystem@127.0.0.1:2552"]
     
      auto-down = on
    }
  }
}


